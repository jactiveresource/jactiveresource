<!--
  $LastChangedRevision$ <br>
  $LastChangedDate$
  $LastChangedBy$
-->

<project name="jactiveresource" default="dist" basedir=".">

	<!-- ==================== properties ===========================

  Each of the following properties are used in the build script.
  Values for these properties are set by the first place they are
  defined, from the following list:

  * Definitions on the "ant" command line (ant -Dfoo=bar compile).

  * Definitions from a "jactiveresource.properties" file in the top level
    source directory of this application.

  * Default definitions in this build.xml file.

-->

	<property file="jactiveresource.properties" />

	<property name="app.name" value="jactiveresource" />
	<property name="app.description" value="Java port of Ruby's ActiveResource" />
	<property name="app.version" value="0.2" />
	<property name="src.home" value="${basedir}/src" />
	<property name="build.home" value="${basedir}/build" />
	<property name="testsrc.home" value="${basedir}/testsrc" />
	<property name="testbuild.home" value="${basedir}/testbuild" />
	<property name="dist.home" value="${basedir}/dist" />
	<property name="jar.filename" value="${app.name}-${app.version}.jar" />
	<property name="javadoc.home" value="${basedir}/api" />

	<property name="compile.debug" value="true" />
	<property name="compile.deprecation" value="false" />
	<property name="compile.optimize" value="true" />

	<!-- ==================== classpaths =========================== -->

	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="compiletest.classpath">
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${build.home}" />
	</path>

	<path id="runtest.classpath">
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${build.home}" />
		<pathelement location="${testbuild.home}" />
	</path>

	<!-- ==================== clean ==================================== -->

	<target name="clean" description="Delete old build and dist directories">
		<delete dir="${build.home}" />
		<delete dir="${dist.home}" />
		<delete dir="${testbuild.home}" />
		<delete dir="${javadoc.home}" />
	</target>

	<!-- ==================== compile ================================== -->

	<target name="compile" description="Compile Java sources">

		<mkdir dir="${build.home}" />
		<javac srcdir="${src.home}" destdir="${build.home}" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
			<classpath refid="compile.classpath" />
		</javac>

	</target>

	<!-- ==================== dist ===================================== -->

	<target name="dist" depends="compile" description="Create binary distribution">

		<mkdir dir="${dist.home}" />
		<jar jarfile="${dist.home}/${jar.filename}" basedir="${build.home}">
			<manifest>
				<attribute name="Implementation-Title" value="${app.description}" />
				<attribute name="Implementation-Version" value="${app.version}" />
				<attribute name="Implementation-Vendor" value="jactiveresource.org" />
			</manifest>
		</jar>

	</target>

	<!-- ==================== javadoc ================================== -->

	<target name="javadoc" description="Create Javadoc API documentation">

		<mkdir dir="${javadoc.home}" />
		<javadoc sourcepath="${src.home}" destdir="${javadoc.home}" packagenames="*">
			<classpath refid="compile.classpath" />
		</javadoc>

	</target>

	<!-- ==================== compiletests ================================== -->

	<target name="compiletests" depends="compile" description="Compile test classes">

		<mkdir dir="${testbuild.home}" />
		<javac srcdir="${testsrc.home}" destdir="${testbuild.home}" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
			<classpath refid="compiletest.classpath" />
		</javac>

	</target>

	<!-- ==================== runtests ================================== -->

	<target name="runtests" depends="compiletests">
		<junit fork="true">
			<classpath refid="runtest.classpath" />
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${testsrc.home}">
					<include name="**/*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

</project>
